// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#[allow(unused)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct PlayerComponent {
    pub entity_id: u64,
    pub owner_id: Identity,
    pub role: String,
    pub uuid: String,
    pub full_name: String,
    pub nickname: String,
    pub gender: String,
    pub universitas: String,
    pub kodeuniv: String,
    pub fakultas: String,
    pub jurusan: String,
    pub in_game: bool,
    pub logged_in: bool,
}

impl TableType for PlayerComponent {
    const TABLE_NAME: &'static str = "PlayerComponent";
    type ReducerEvent = super::ReducerEvent;
}

impl TableWithPrimaryKey for PlayerComponent {
    type PrimaryKey = u64;
    fn primary_key(&self) -> &Self::PrimaryKey {
        &self.entity_id
    }
}

impl PlayerComponent {
    #[allow(unused)]
    pub fn filter_by_entity_id(entity_id: u64) -> Option<Self> {
        Self::find(|row| row.entity_id == entity_id)
    }
    #[allow(unused)]
    pub fn filter_by_owner_id(owner_id: Identity) -> Option<Self> {
        Self::find(|row| row.owner_id == owner_id)
    }
    #[allow(unused)]
    pub fn filter_by_role(role: String) -> TableIter<Self> {
        Self::filter(|row| row.role == role)
    }
    #[allow(unused)]
    pub fn filter_by_uuid(uuid: String) -> TableIter<Self> {
        Self::filter(|row| row.uuid == uuid)
    }
    #[allow(unused)]
    pub fn filter_by_full_name(full_name: String) -> TableIter<Self> {
        Self::filter(|row| row.full_name == full_name)
    }
    #[allow(unused)]
    pub fn filter_by_nickname(nickname: String) -> TableIter<Self> {
        Self::filter(|row| row.nickname == nickname)
    }
    #[allow(unused)]
    pub fn filter_by_gender(gender: String) -> TableIter<Self> {
        Self::filter(|row| row.gender == gender)
    }
    #[allow(unused)]
    pub fn filter_by_universitas(universitas: String) -> TableIter<Self> {
        Self::filter(|row| row.universitas == universitas)
    }
    #[allow(unused)]
    pub fn filter_by_kodeuniv(kodeuniv: String) -> TableIter<Self> {
        Self::filter(|row| row.kodeuniv == kodeuniv)
    }
    #[allow(unused)]
    pub fn filter_by_fakultas(fakultas: String) -> TableIter<Self> {
        Self::filter(|row| row.fakultas == fakultas)
    }
    #[allow(unused)]
    pub fn filter_by_jurusan(jurusan: String) -> TableIter<Self> {
        Self::filter(|row| row.jurusan == jurusan)
    }
    #[allow(unused)]
    pub fn filter_by_in_game(in_game: bool) -> TableIter<Self> {
        Self::filter(|row| row.in_game == in_game)
    }
    #[allow(unused)]
    pub fn filter_by_logged_in(logged_in: bool) -> TableIter<Self> {
        Self::filter(|row| row.logged_in == logged_in)
    }
}
