// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#[allow(unused)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct CreatePlayerArgs {
    pub role: String,
    pub gender: String,
    pub uuid: String,
    pub full_name: String,
    pub nickname: String,
    pub universitas: String,
    pub kodeuniv: String,
    pub fakultas: String,
    pub jurusan: String,
}

impl Reducer for CreatePlayerArgs {
    const REDUCER_NAME: &'static str = "create_player";
}

#[allow(unused)]
pub fn create_player(
    role: String,
    gender: String,
    uuid: String,
    full_name: String,
    nickname: String,
    universitas: String,
    kodeuniv: String,
    fakultas: String,
    jurusan: String,
) {
    CreatePlayerArgs {
        role,
        gender,
        uuid,
        full_name,
        nickname,
        universitas,
        kodeuniv,
        fakultas,
        jurusan,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_create_player(
    mut __callback: impl FnMut(
            &Identity,
            Option<Address>,
            &Status,
            &String,
            &String,
            &String,
            &String,
            &String,
            &String,
            &String,
            &String,
            &String,
        ) + Send
        + 'static,
) -> ReducerCallbackId<CreatePlayerArgs> {
    CreatePlayerArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let CreatePlayerArgs {
            role,
            gender,
            uuid,
            full_name,
            nickname,
            universitas,
            kodeuniv,
            fakultas,
            jurusan,
        } = __args;
        __callback(
            __identity,
            __addr,
            __status,
            role,
            gender,
            uuid,
            full_name,
            nickname,
            universitas,
            kodeuniv,
            fakultas,
            jurusan,
        );
    })
}

#[allow(unused)]
pub fn once_on_create_player(
    __callback: impl FnOnce(
            &Identity,
            Option<Address>,
            &Status,
            &String,
            &String,
            &String,
            &String,
            &String,
            &String,
            &String,
            &String,
            &String,
        ) + Send
        + 'static,
) -> ReducerCallbackId<CreatePlayerArgs> {
    CreatePlayerArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let CreatePlayerArgs {
            role,
            gender,
            uuid,
            full_name,
            nickname,
            universitas,
            kodeuniv,
            fakultas,
            jurusan,
        } = __args;
        __callback(
            __identity,
            __addr,
            __status,
            role,
            gender,
            uuid,
            full_name,
            nickname,
            universitas,
            kodeuniv,
            fakultas,
            jurusan,
        );
    })
}

#[allow(unused)]
pub fn remove_on_create_player(id: ReducerCallbackId<CreatePlayerArgs>) {
    CreatePlayerArgs::remove_on_reducer(id);
}
