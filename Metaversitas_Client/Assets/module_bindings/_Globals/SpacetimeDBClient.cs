// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.
// <auto-generated />

#nullable enable

using System;
using SpacetimeDB;

namespace SpacetimeDB.Types
{
	public enum ReducerType
	{
		None,
		CheckAndUpdateLobbies,
		CreateLobby,
		CreatePlayer,
		DestroyLobby,
		FilterLobbies,
		Interact,
		JoinLobby,
		LeaveLobby,
		Matchmaking,
		MovePlayer,
		PublicChatMessage,
		RotatePlayer,
		SendPrivateMessage,
		StopPlayer,
		StopRotatePlayer,
		UpdateLobbyTimeLimit,
		UpdatePlayerInGameStatus,
	}

	public interface IReducerArgs : IReducerArgsBase
	{
		ReducerType ReducerType { get; }
		bool InvokeHandler(ReducerEvent reducerEvent);
	}

	public partial class ReducerEvent : ReducerEventBase
	{
		public IReducerArgs? Args { get; }

		public string ReducerName => Args?.ReducerName ?? "<none>";

		[Obsolete("ReducerType is deprecated, please match directly on type of .Args instead.")]
		public ReducerType Reducer => Args?.ReducerType ?? ReducerType.None;

		public ReducerEvent(IReducerArgs? args) : base() => Args = args;
		public ReducerEvent(ClientApi.Event dbEvent, IReducerArgs? args) : base(dbEvent) => Args = args;

		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public CheckAndUpdateLobbiesArgsStruct CheckAndUpdateLobbiesArgs => (CheckAndUpdateLobbiesArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public CreateLobbyArgsStruct CreateLobbyArgs => (CreateLobbyArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public CreatePlayerArgsStruct CreatePlayerArgs => (CreatePlayerArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public DestroyLobbyArgsStruct DestroyLobbyArgs => (DestroyLobbyArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public FilterLobbiesArgsStruct FilterLobbiesArgs => (FilterLobbiesArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public InteractArgsStruct InteractArgs => (InteractArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public JoinLobbyArgsStruct JoinLobbyArgs => (JoinLobbyArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public LeaveLobbyArgsStruct LeaveLobbyArgs => (LeaveLobbyArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public MatchmakingArgsStruct MatchmakingArgs => (MatchmakingArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public MovePlayerArgsStruct MovePlayerArgs => (MovePlayerArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public PublicChatMessageArgsStruct PublicChatMessageArgs => (PublicChatMessageArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public RotatePlayerArgsStruct RotatePlayerArgs => (RotatePlayerArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public SendPrivateMessageArgsStruct SendPrivateMessageArgs => (SendPrivateMessageArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public StopPlayerArgsStruct StopPlayerArgs => (StopPlayerArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public StopRotatePlayerArgsStruct StopRotatePlayerArgs => (StopRotatePlayerArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public UpdateLobbyTimeLimitArgsStruct UpdateLobbyTimeLimitArgs => (UpdateLobbyTimeLimitArgsStruct)Args!;
		[Obsolete("Accessors that implicitly cast `Args` are deprecated, please match `Args` against the desired type explicitly instead.")]
		public UpdatePlayerInGameStatusArgsStruct UpdatePlayerInGameStatusArgs => (UpdatePlayerInGameStatusArgsStruct)Args!;

		public override bool InvokeHandler() => Args?.InvokeHandler(this) ?? false;
	}

	public class SpacetimeDBClient : SpacetimeDBClientBase<ReducerEvent>
	{
		protected SpacetimeDBClient()
		{
			clientDB.AddTable<AnimationComponent>();
			clientDB.AddTable<ChatMessage>();
			clientDB.AddTable<Config>();
			clientDB.AddTable<Lobby>();
			clientDB.AddTable<MobileEntityComponent>();
			clientDB.AddTable<PlayerComponent>();
			clientDB.AddTable<SpawnableEntityComponent>();
		}

		public static readonly SpacetimeDBClient instance = new();

		protected override ReducerEvent ReducerEventFromDbEvent(ClientApi.Event dbEvent)
		{
			var argBytes = dbEvent.FunctionCall.ArgBytes;
			IReducerArgs? args = dbEvent.FunctionCall.Reducer switch {
				"check_and_update_lobbies" => BSATNHelpers.FromProtoBytes<CheckAndUpdateLobbiesArgsStruct>(argBytes),
				"create_lobby" => BSATNHelpers.FromProtoBytes<CreateLobbyArgsStruct>(argBytes),
				"create_player" => BSATNHelpers.FromProtoBytes<CreatePlayerArgsStruct>(argBytes),
				"destroy_lobby" => BSATNHelpers.FromProtoBytes<DestroyLobbyArgsStruct>(argBytes),
				"filter_lobbies" => BSATNHelpers.FromProtoBytes<FilterLobbiesArgsStruct>(argBytes),
				"interact" => BSATNHelpers.FromProtoBytes<InteractArgsStruct>(argBytes),
				"join_lobby" => BSATNHelpers.FromProtoBytes<JoinLobbyArgsStruct>(argBytes),
				"leave_lobby" => BSATNHelpers.FromProtoBytes<LeaveLobbyArgsStruct>(argBytes),
				"matchmaking" => BSATNHelpers.FromProtoBytes<MatchmakingArgsStruct>(argBytes),
				"move_player" => BSATNHelpers.FromProtoBytes<MovePlayerArgsStruct>(argBytes),
				"public_chat_message" => BSATNHelpers.FromProtoBytes<PublicChatMessageArgsStruct>(argBytes),
				"rotate_player" => BSATNHelpers.FromProtoBytes<RotatePlayerArgsStruct>(argBytes),
				"send_private_message" => BSATNHelpers.FromProtoBytes<SendPrivateMessageArgsStruct>(argBytes),
				"stop_player" => BSATNHelpers.FromProtoBytes<StopPlayerArgsStruct>(argBytes),
				"stop_rotate_player" => BSATNHelpers.FromProtoBytes<StopRotatePlayerArgsStruct>(argBytes),
				"update_lobby_time_limit" => BSATNHelpers.FromProtoBytes<UpdateLobbyTimeLimitArgsStruct>(argBytes),
				"update_player_in_game_status" => BSATNHelpers.FromProtoBytes<UpdatePlayerInGameStatusArgsStruct>(argBytes),
				"<none>" => null,
				"__identity_connected__" => null,
				"__identity_disconnected__" => null,
				"" => null,
				var reducer => throw new ArgumentOutOfRangeException("Reducer", $"Unknown reducer {reducer}")
			};
			return new ReducerEvent(dbEvent, args);
		}
	}
}
